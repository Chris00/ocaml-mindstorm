#								-*-conf-*-
OASISFormat: 0.4
Name:        mindstorm
Version:     0.6.1
Synopsis:    Drive Lego Mindstorms bricks from OCaml
Description: This library allows you to communicate with your Lego
  Mindstorms brick via bluetooth, enable the motors and retrieve data
  from various sensors.
Authors:     Christophe Troestler, Julie De Pril, Marc Ducobu, Dany Maslowski
Maintainers: Christophe Troestler <Christophe.Troestler@umons.ac.be>
License:     LGPL-2.1 with OCaml linking exception
Homepage:    http://forge.ocamlcore.org/projects/ocaml-mindstorm/
Plugins:     META (0.4)
OCamlVersion: >= 3.12
# Generate interfaces files for the user so that they do not contain macros:
PostConfCommand: ocaml pp.ml

Flag has_usb
  Description: Whether libusb development files are installed
  Default: false

Flag lwt
  Description: Whether the Lwt package is present
  Default: false

Library mindstorm
  Path:       src
  BuildTools: ocamlbuild
  Modules:    Mindstorm, Mindstorm_NXT, Mindstorm_EV3
  BuildDepends: bytes, mindstorm.connect
  BuildTools+: cppo

Library mindstorm_lwt
  Build$:     flag(lwt)
  Path:       src
  BuildTools: ocamlbuild
  Modules:    Mindstorm_lwt, Mindstorm_lwt_NXT
  BuildDepends: bytes, mindstorm.lwt_connect
  BuildTools+: cppo
  FindlibName:   lwt
  FindlibParent: mindstorm

Library mindstorm_connect
  Path:       src
  BuildTools: ocamlbuild
  Modules:    Mindstorm_connect
  BuildDepends: unix, bytes
  BuildTools+: cppo
  FindlibName:   connect
  FindlibParent: mindstorm
  XMETADescription: Connect to Lego bricks via bluetooth or USB
  CSources:   mindstorm_stubs.c
  if architecture(amd64)
    CCOpt: -DARCH64
  if system(linux)
    CCLib: -lbluetooth
    if flag(has_usb)
      CCLib+: -lusb-1.0
      CCOpt+: -DHAS_USB
  if system(msvc)
    CCOpt: /nologo /DWIN32
    CCLib: /I"C:\Program Files\Microsoft Platform SDK\Include"
  if system(macosx)
    CCOpt: -DMACOSX
    CCLib: -I /System/Library/Frameworks/IOBluetooth.framework/Headers

Library mindstorm_lwt_connect
  Build$:     flag(lwt)
  Path:       src
  BuildTools: ocamlbuild
  Modules:    Mindstorm_lwt_connect
  BuildDepends: unix, bytes, threads, lwt, lwt.unix, lwt.preemptive
  BuildTools+: cppo
  FindlibName:   lwt_connect
  FindlibParent: mindstorm
  XMETADescription: Connect to Lego bricks via bluetooth or USB (Lwt version)
  CSources:   mindstorm_stubs.c
  if architecture(amd64)
    CCOpt: -DARCH64
  if system(linux)
    CCLib: -lbluetooth
    if flag(has_usb)
      CCLib+: -lusb-1.0
      CCOpt+: -DHAS_USB
  if system(msvc)
    CCOpt: /nologo /DWIN32
    CCLib: /I"C:\Program Files\Microsoft Platform SDK\Include"
  if system(macosx)
    CCOpt: -DMACOSX
    CCLib: -I /System/Library/Frameworks/IOBluetooth.framework/Headers

Document API
  Title:           API reference for Mindstorm
  Type:            OCamlbuild (0.4)
  InstallDir:      $docdir/api
  BuildTools:      ocamldoc, ocamlbuild
  Format:	   HTML
  Index:           doc/intro.txt
  XOCamlbuildPath: .
  XOCamlbuildLibraries: mindstorm

# Tests:
######################################################################
Executable disconnect
  Build$:	flag(tests)
  Path:         tests/
  MainIs:       disconnect.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false

Executable file_list
  Build$:	flag(tests)
  Path:         tests/
  MainIs:       file_list.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false

Executable file_list_lwt
  Build$:	flag(tests) && flag(lwt)
  Path:         tests/
  MainIs:       file_list_lwt.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm.lwt
  CompiledObject: best
  Install:      false

Executable info
  Build$:	flag(tests)
  Path:         tests/
  MainIs:       info.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false

Executable info_lwt
  Build$:	flag(tests) && flag(lwt)
  Path:         tests/
  MainIs:       info_lwt.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm.lwt
  CompiledObject: best
  Install:      false

Executable keep_alive
  Build$:	flag(tests)
  Path:         tests/
  MainIs:       keep_alive.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false

Executable keep_alive_lwt
  Build$:	flag(tests) && flag(lwt)
  Path:         tests/
  MainIs:       keep_alive_lwt.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm.lwt
  CompiledObject: best
  Install:      false

Executable motor
  Build$:	flag(tests)
  Path:         tests/
  MainIs:       motor.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false

Executable sensors
  Build$:	flag(tests)
  Path:         tests/
  MainIs:       sensors.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false

Executable sound
  Build$:	flag(tests)
  Path:         tests/
  MainIs:       sound.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false

Executable upload
  Build$:	flag(tests)
  Path:         tests/
  MainIs:       upload.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false


Executable ev3_sound
  Build$:	flag(tests)
  Path:         tests/
  MainIs:       ev3_sound.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false

# Examples
######################################################################

Executable roam
  Build$:	flag(tests)
  Path:         examples/
  MainIs:       roam.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false

Executable run_push
  Build$:	flag(tests)
  Path:         examples/
  MainIs:       run_push.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false

Executable test_speed
  Build$:	flag(tests)
  Path:         examples/
  MainIs:       test_speed.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false

Executable test_threads
  Build$:	flag(tests)
  Path:         examples/
  MainIs:       test_threads.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm, threads
  CompiledObject: best
  Install:      false

Executable wander
  Build$:	flag(tests)
  Path:         examples/
  MainIs:       wander.ml
  BuildTools:   ocamlbuild
  BuildDepends: mindstorm
  CompiledObject: best
  Install:      false


SourceRepository master
  Type:       git
  Location:   https://github.com/Chris00/ocaml-mindstorm.git
  Browser:    https://github.com/Chris00/ocaml-mindstorm
